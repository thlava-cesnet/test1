name: Matrix test 2

on:
  workflow_call:
    inputs:
      oarepo:
        description: OARepo version (11, 12, ...)
        required: true
        default: 11
        type: string
  workflow_dispatch:
    inputs:
      oarepo:
        description: OARepo version (11, 12, ...)
        required: true
        default: 11

jobs:
  load-matrix-job:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.load-matrix.outputs.matrix }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: set matrix
        id: load-matrix
        run: echo "matrix=$(jq -c . < ./libraries.json)" >> $GITHUB_OUTPUT
      - name: debug
        run: |
          echo "matrix: >${{ steps.load-matrix.outputs.matrix }}<"
          echo "json:"
          jq '.' <<<'${{ steps.load-matrix.outputs.matrix }}'

  process-matrix-job:
    runs-on: ubuntu-latest
    needs: load-matrix-job
    strategy:
      matrix:
        library: ${{ fromJson(needs.load-matrix-job.outputs.matrix) }}
        python-version: [ "3.10" ]
    env:
      OAREPO_VERSION: ${{ github.event.inputs.oarepo }}
      TOK: ${{ secrets.OAREPO_BOT }}
      BOT: oarepo-bot
      TMP_DIR: /tmp/digests
      REPO2: ${{ matrix.library }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Print matrix
        run: |
          echo "matrix.library: ${{ matrix.library }}"
          echo "matrix: >${{ matrix }}<"
          echo "json: >${{ toJson(matrix) }}<"
      - name: get default branch for ${{ matrix.library }}
        run: |
          REPO="${{ matrix.library }}"
          BASE_URL="https://api.github.com/repos/$REPO"
          . ./scripts/functions.sh
          echo -e "\n$REPO\n($BASE_URL)\nget default branch:"
          BR=$(api_call "$BASE_URL" | jq -r '.default_branch')
          echo " ... branch $BR"
          echo "BR=$BR" >> $GITHUB_ENV
      - name: get trigrun for ${{ matrix.library }}
        run: |
          REPO="${{ matrix.library }}"
          BASE_URL="https://api.github.com/repos/$REPO"
          . ./scripts/functions.sh
          echo "api_get_trigrun (for $REPO):"
          read RUNDATE RUNCONCLUSION <<<$(api_get_trigrun "$BASE_URL")
          sleep 1
          read SUCCDATE SUCCCONCLUSION <<<$(api_get_trigrun "$BASE_URL" workflow_dispatch success)
          echo "RUNCONCLUSION=$RUNCONCLUSION RUNDATE=$RUNDATE SUCCDATE=$SUCCDATE"
          if [[ "$RUNCONCLUSION" != "success" && -n "$SUCCDATE" ]]; then
            # last run failed and there is at least one succ.run
            S_AGE=$(( $(date '+%s') - $(date '+%s' -d "$(echo $SUCCDATE)") ))
            if [[ $S_AGE -lt 86400 ]]; then
              # succ.run less then 1 day old
              echo "notification trigger!"
            fi
          fi
          mkdir -p ${{ env.TMP_DIR }}
          FILE="${{ env.TMP_DIR }}/${REPO//\//_}.txt"
          echo -e "$REPO\t$RUNCONCLUSION\t$RUNDATE\t$SUCCDATE" > "$FILE"
          echo -e "FILE=$FILE\nARTIF_NAME=${REPO//\//_}" >> $GITHUB_ENV
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIF_NAME }}
          path: ${{ env.FILE }}
          retention-days: 1

  process-outputs:
    runs-on: ubuntu-latest
    needs: process-matrix-job
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: debug
        run: |
          OAR_LIBS=$(jq -c '.[]' < ./libraries.json)
          echo ">$OAR_LIBS<"
          echo "OAR_LIBS=$OAR_LIBS" >> $GITHUB_ENV
      - name: debug2
        run: |
          echo ">$OAR_LIBS<"
#      - name: Download artifact
#        uses: actions/download-artifact@v3
#        with:
#          name: ${{ env.ARTIF_NAME }}
#          path: ${{ env.FILE }}
